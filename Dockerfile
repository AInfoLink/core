# Automatically generated by hassfest.
#

FROM mcr.microsoft.com/devcontainers/python:1-3.12 AS python-builder

WORKDIR /app

# Uninstall pre-installed formatting and linting tools
# They would conflict with our pinned versions
RUN \
    pipx uninstall pydocstyle \
    && pipx uninstall pycodestyle \
    && pipx uninstall mypy \
    && pipx uninstall pylint

RUN \
    apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        git \
        gcc \
        g++ \
        curl \
        vim \
        cmake \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# To update, run python3 -m script.hassfest -p docker
FROM ghcr.io/home-assistant/qemux86-64-homeassistant:2024.7.0

# Synchronize with homeassistant/core.py:async_stop
ENV \
    S6_SERVICES_GRACETIME=240000 \
    UV_SYSTEM_PYTHON=true

ARG QEMU_CPU

# Install uv
RUN pip3 install uv==0.2.13

WORKDIR /usr/src

# Install gcc, make, and other build tools
RUN apk update && apk add --no-cache \
    gcc \
    g++ \
    gnu-libiconv \
    vim \
    make \
    cmake

## Setup Home Assistant Core dependencies
COPY requirements.txt homeassistant/
COPY homeassistant/package_constraints.txt homeassistant/homeassistant/
RUN \
    uv pip install \
        --no-build \
        -r homeassistant/requirements.txt

COPY requirements_all.txt home_assistant_frontend-* home_assistant_intents-* homeassistant/
RUN \
    if ls homeassistant/home_assistant_*.whl 1> /dev/null 2>&1; then \
        uv pip install homeassistant/home_assistant_*.whl; \
    fi \
    && if [ "${BUILD_ARCH}" = "i386" ]; then \
        linux32 uv pip install \
            --no-build \
            -r homeassistant/requirements_all.txt; \
    else \
        uv pip install \
            --no-build \
            -r homeassistant/requirements_all.txt; \
    fi

## Setup Home Assistant Core
COPY . homeassistant/
RUN \
    uv pip install \
        -e ./homeassistant \
    && python3 -m compileall \
        homeassistant/homeassistant

RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \
    && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.35-r0/glibc-2.35-r0.apk \
    && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.35-r0/glibc-dev-2.35-r0.apk
RUN wget https://ftp.gnu.org/gnu/libiconv/libiconv-1.17.tar.gz

RUN apk add --force-overwrite glibc-2.35-r0.apk \
    && apk fix --force-overwrite alpine-baselayout-data \
    && apk add glibc-dev-2.35-r0.apk

RUN tar -xzvf libiconv-1.17.tar.gz \
    && cd libiconv-1.17 && ./configure --prefix=/usr/local/glibc --with-libiconv-prefix=/usr/local/glibc \
    && make \
    && make install

# Home Assistant S6-Overlay
COPY rootfs /

# Copy any files from the first stage into the second stage
RUN mkdir /debian-env
COPY --from=python-builder / /debian-env

WORKDIR /config
